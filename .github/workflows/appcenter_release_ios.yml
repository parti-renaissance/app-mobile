name: AppCenter Delivery iOS
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Define the environment (staging|production)'
        required: true
        default: 'staging'
      signing:
        description: 'Define the code signing method (adhoc|appstore)'
        required: true
        default: 'adhoc'
      force_codesign:
        description: 'Recreate signing assets (false|true)'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ruby setup
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ./ios
          bundler: 'Gemfile.lock'
          bundler-cache: true

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Set up node dependencies
        run: yarn install

      - name: Prepare env
        env:
          RN_B64_ENV_STAGING: ${{ secrets.RN_B64_ENV_STAGING }}
          RN_B64_ENV_PRODUCTION: ${{ secrets.RN_B64_ENV_PRODUCTION }}
          IOS_B64_FASTLANE_ENV_DEFAULT: ${{ secrets.IOS_B64_FASTLANE_ENV_DEFAULT }}
          IOS_B64_FASTLANE_ENV_DEV: ${{ secrets.IOS_B64_FASTLANE_ENV_DEV }}
          IOS_B64_FASTLANE_ENV_STAGING: ${{ secrets.IOS_B64_FASTLANE_ENV_STAGING }}
          IOS_B64_FASTLANE_ENV_PRODUCTION: ${{ secrets.IOS_B64_FASTLANE_ENV_PRODUCTION }}
          IOS_B64_FASTLANE_ENV_DISTRIBUTION: ${{ secrets.IOS_B64_FASTLANE_ENV_DISTRIBUTION }}
          IOS_B64_FIREBASE_PLIST_DEV: ${{ secrets.IOS_B64_FIREBASE_PLIST_DEV }}
          IOS_B64_FIREBASE_PLIST_STAGING: ${{ secrets.IOS_B64_FIREBASE_PLIST_STAGING }}
          IOS_B64_FIREBASE_PLIST_PRODUCTION: ${{ secrets.IOS_B64_FIREBASE_PLIST_PRODUCTION }}
          IOS_B64_APP_STORE_CONNECT_API_KEY: ${{ secrets.IOS_B64_APP_STORE_CONNECT_API_KEY }}
        run: ./cli.js prepare ${{ github.event.inputs.environment }}

      - name: Pods cache
        uses: actions/cache@v1
        with:
          path: ./ios/Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('ios/**/Podfile.lock') }}

      - name: Pod install
        working-directory: ./ios
        run: |
          if [ ! -d "Pods" ]; then
            bundle exec pod install || bundle exec pod install --repo-update
          fi

      - name: Build and test
        working-directory: ./ios
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          SLACK_INCOMING_WEBKOOK_URL: ${{ secrets.SLACK_INCOMING_WEBKOOK_URL }}
          APP_CENTER_API_KEY: ${{ secrets.APP_CENTER_API_KEY }}
          MATCH_PASSWORD: ${{ secrets.IOS_MATCH_PASSWORD_SECRET }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.IOS_MATCH_GIT_BASIC_AUTHORIZATION_SECRET }}
        run: bundle exec fastlane deploy match_type:${{ github.event.inputs.signing }} force_codesign:${{ github.event.inputs.force_codesign }} --env ${{ github.event.inputs.environment }}
