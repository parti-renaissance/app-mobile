name: CI android
on:
  push:
    branches-ignore:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./android
    container:
      image: docker://fabernovel/android:api-33-v1.7.0
      volumes:
        - /github/home/.ssh:/root/.ssh
    env:
      JAVA_TOOL_OPTIONS: "-XX:MinRAMPercentage=20.0 -XX:MaxRAMPercentage=90.0"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js 21
        uses: actions/setup-node@v1
        with:
          node-version: "21.1.0"

      - name: Install Yarn
        working-directory: ./
        run: npm install -g yarn

      - name: Set up dependencies
        working-directory: ./

        run: yarn install
      - name: Prepare env
        working-directory: ./
        env:
          ANDROID_B64_GOOGLE_SERVICES_PRODUCTION: ${{ secrets.ANDROID_B64_GOOGLE_SERVICES_PRODUCTION }}
          ANDROID_B64_GOOGLE_SERVICES_STAGING: ${{ secrets.ANDROID_B64_GOOGLE_SERVICES_STAGING }}
          ANDROID_B64_RELEASE_KEYSTORE: ${{ secrets.ANDROID_B64_RELEASE_KEYSTORE }}
          ANDROID_B64_FASTFILE_ENV_STAGING: ${{ secrets.ANDROID_B64_FASTFILE_ENV_STAGING }}
          ANDROID_B64_FASTFILE_ENV_PRODUCTION: ${{ secrets.ANDROID_B64_FASTFILE_ENV_PRODUCTION }}
          RN_B64_ENV_STAGING: ${{ secrets.RN_B64_ENV_STAGING }}
          RN_B64_ENV_PRODUCTION: ${{ secrets.RN_B64_ENV_PRODUCTION }}
        run: ./cli.js prepare staging

      # - name: Ruby cache
      #   uses: actions/cache@v2.1.1
      #   with:
      #     path: /root/vendor/bundle
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-
      # - name: Gradle cache
      #   uses: actions/cache@v2.1.1
      #   with:
      #     path: /root/.gradle
      #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gradle

      - name: Ruby setup
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ./android
          bundler: "Gemfile.lock"
          bundler-cache: true
      - name: Bundle install
        working-directory: ./android
        run: |
          bundle install
      - run: git config --system --add safe.directory /__w/app-mobile/app-mobile
      - name: Fastlane
        working-directory: ./android
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
        run: bundle exec fastlane ci_check
